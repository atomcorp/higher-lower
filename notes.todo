Tasks: 


Idea: 
  ☐ higher or low game
  ☐ play against a computer or another person
  ☐ play online? (could use seperate phones for each player) and connect on a screen (websockets)
  ☐ CSS transitions to animate cards 
  ☐ player can select how many cards to draw
  ☐ add probability %

Rules (simple) / flow:
  - Deck autogenerated
  - Add player (can be saved)
  - Pick how many cards to play with (default 10)
  - Player presses play button
  - Cards shuffled, then cards sliced
  - First card automatically placed
  - First player is chosen
    - Users picks higher or lower, data stored
    - If more than one user, next person picks, data stored etc
  - Next card shown
    - if card is a max card (ie 1/ace or 13/king) move to the next card
    - if wrong, game ends
    - if right, new card picked
    - if card is same, move to the next card
  - if player reaches last card they win

Components:
  - player
  - cards
  - deck
  - card
  - rules
  - table (where we display cards) 
  - draw cards button
  - higher and lower buttons

References:
  Card CSS: https://designshack.net/articles/css/css-card-tricks/
  esLint for Flow: https://www.npmjs.com/package/eslint-plugin-flowtype

State:
  // state object
  const fakeState = {
    deck: ['card objects go here'], // never changes
    cardOrder/selection: [..., "c7", "h5"], // array of ids
    cardCounter: 0,
    players: {
      player1: {
        id: 'player1',
        playerType: 'human',
        name: 'tom',
        points: 0
      },
      player2: {
        id: 'player2',
        playerType: 'computer',
        name: 'bytes',
        points: 0
      }
    },
    activePlayer: 'player1',
    higherOrLower: 'higher'
  }

